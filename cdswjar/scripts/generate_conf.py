#!/usr/bin/env python
# Copyright (c) 2017 Cloudera, Inc. All rights reserved.

import ConfigParser
import hashlib
import os
import subprocess
import sys
import traceback

'''
converts cdsw.properties to environment file expected by CDSW by putting the
values in quotes and escaping wherever required

The environment file also contains the KUBE_TOKEN generated out of CDSW_SECRET
defined in the properties file and JAVA_HOME picked from the environment.
'''

PROCESS_DIR = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))

class FakeSecHead(object):
  def __init__(self, fp):
    self.fp = fp
    self.sechead = '[global]\n'

  def readline(self):
    if self.sechead:
      try:
        return self.sechead
      finally:
        self.sechead = None
    else:
      return self.fp.readline()

def convert_props_to_environ():
  default_values = _find_default_values()

  props_file = os.path.join(PROCESS_DIR, 'cdsw.properties')
  cp = ConfigParser.SafeConfigParser()
  cp.optionxform = str
  cp.readfp(FakeSecHead(open(props_file)))

  # Add JAVA_HOME to the conf
  print ('JAVA_HOME="{}"'.format(os.environ.get('JAVA_HOME') or ''))
  '''
  Add KUBE_TOKEN to the conf file. The KUBE_TOKEN is based on the
  CDSW_CLUSTER_SECRET generated by CM at the time of service installation.
  makeKubeToken deterministically create the token in the format expected by
  kubernetes which is [a-z0-9]{6}\.[a-z0-9]{16}
  '''
  cdsw_secret = cp.get('global', 'CDSW_CLUSTER_SECRET')
  kube_token = _create_kube_token(cdsw_secret)
  print ('KUBE_TOKEN="{}"'.format(kube_token))

  # Add the parcels location to the conf, this is passed through from CM
  print ('DISTRO="CDH"')
  print ('DISTRO_DIR="{}"'.format(os.environ.get('PARCELS_ROOT') or ''))

  for pair in cp.items('global'):
    var_name = pair[0]
    var_value = pair[1].replace('"', '\\"')
    if not var_value:
      var_value = default_values.get(var_name, '')
    print ('{}="{}"'.format(var_name, var_value))

def _find_default_values():
  # Get default values for DOMAIN and MASTER_IP
  master_file = os.path.join(PROCESS_DIR, 'cdsw_master.properties')
  with open(master_file, 'r') as f:
    try:
      master_hostname = f.readline().split(":")[0]
    except:
      print >> sys.stderr, "Unable to get master hostname from cdsw_master.properties"
      return {}
    try:
      master_ip = subprocess.check_output(["host", master_hostname]).rstrip().split('has address ')[1]
    except:
      print >> sys.stderr, traceback.format_exc()
      master_ip = master_hostname

  return {"DOMAIN": master_hostname, "MASTER_IP": master_ip}

def _create_kube_token(cdsw_secret):
  m = hashlib.md5()
  m.update(cdsw_secret)
  d = m.hexdigest()
  return "{}.{}".format(d[:6], d[6:22])

if __name__ == "__main__":
  convert_props_to_environ()
